Lexical Analyzis==================

TOKENS------------------------
Token { input: "if", line: 1, column: 0, rule: IF }
Token { input: "(", line: 1, column: 2, rule: OPEN_PARENTHESES }
Token { input: "a", line: 1, column: 3, rule: IDENTIFIER }
Token { input: "==", line: 1, column: 5, rule: CONDITIONAL }
Token { input: "1", line: 1, column: 8, rule: NUM }
Token { input: ")", line: 1, column: 9, rule: CLOSE_PARENTHESES }
Token { input: "{", line: 1, column: 11, rule: OPEN_BRACES }
Token { input: "a", line: 2, column: 17, rule: IDENTIFIER }
Token { input: "=", line: 2, column: 19, rule: ATTRIBUTION }
Token { input: "2", line: 2, column: 21, rule: NUM }
Token { input: ";", line: 2, column: 22, rule: COMMA }
Token { input: "int", line: 3, column: 28, rule: TYPE }
Token { input: "a", line: 3, column: 32, rule: IDENTIFIER }
Token { input: "=", line: 3, column: 34, rule: ATTRIBUTION }
Token { input: "2", line: 3, column: 36, rule: NUM }
Token { input: ";", line: 3, column: 37, rule: COMMA }
Token { input: "a", line: 4, column: 51, rule: IDENTIFIER }
Token { input: "++", line: 4, column: 52, rule: UNARY }
Token { input: ";", line: 4, column: 54, rule: COMMA }
Token { input: "b", line: 5, column: 60, rule: IDENTIFIER }
Token { input: "+=", line: 5, column: 61, rule: ATTRIBUTION }
Token { input: "1", line: 5, column: 63, rule: NUM }
Token { input: ";", line: 5, column: 64, rule: COMMA }
Token { input: "}", line: 6, column: 67, rule: CLOSE_BRACES }
Token { input: "else", line: 7, column: 70, rule: ELSE }
Token { input: "{", line: 7, column: 75, rule: OPEN_BRACES }
Token { input: "char", line: 8, column: 81, rule: TYPE }
Token { input: "c", line: 8, column: 86, rule: IDENTIFIER }
Token { input: "=", line: 8, column: 88, rule: ATTRIBUTION }
Token { input: "\"a\"", line: 8, column: 90, rule: STRING }
Token { input: ";", line: 8, column: 93, rule: COMMA }
Token { input: "}", line: 9, column: 96, rule: CLOSE_BRACES }
Token { input: "switch", line: 10, column: 99, rule: SWITCH }
Token { input: "(", line: 10, column: 105, rule: OPEN_PARENTHESES }
Token { input: "abc", line: 10, column: 106, rule: IDENTIFIER }
Token { input: ")", line: 10, column: 109, rule: CLOSE_PARENTHESES }
Token { input: "{", line: 10, column: 111, rule: OPEN_BRACES }
Token { input: "case", line: 11, column: 117, rule: CASE }
Token { input: "1", line: 11, column: 122, rule: INT }
Token { input: ":", line: 11, column: 123, rule: COLON }
Token { input: "{", line: 11, column: 125, rule: OPEN_BRACES }
Token { input: "a", line: 11, column: 127, rule: IDENTIFIER }
Token { input: "=", line: 11, column: 129, rule: ATTRIBUTION }
Token { input: "a", line: 11, column: 131, rule: IDENTIFIER }
Token { input: "+", line: 11, column: 133, rule: OPERATOR }
Token { input: "1", line: 11, column: 135, rule: NUM }
Token { input: ";", line: 11, column: 136, rule: COMMA }
Token { input: "break", line: 11, column: 138, rule: BREAK }
Token { input: ";", line: 11, column: 143, rule: COMMA }
Token { input: "}", line: 11, column: 145, rule: CLOSE_BRACES }
Token { input: "case", line: 12, column: 151, rule: CASE }
Token { input: "2", line: 12, column: 156, rule: INT }
Token { input: ":", line: 12, column: 157, rule: COLON }
Token { input: "case", line: 12, column: 159, rule: CASE }
Token { input: "3", line: 12, column: 164, rule: INT }
Token { input: ":", line: 12, column: 165, rule: COLON }
Token { input: "{", line: 12, column: 167, rule: OPEN_BRACES }
Token { input: "float", line: 12, column: 169, rule: TYPE }
Token { input: "b", line: 12, column: 175, rule: IDENTIFIER }
Token { input: "+=", line: 12, column: 177, rule: ATTRIBUTION }
Token { input: "2", line: 12, column: 180, rule: NUM }
Token { input: ";", line: 12, column: 181, rule: COMMA }
Token { input: "break", line: 12, column: 183, rule: BREAK }
Token { input: ";", line: 12, column: 188, rule: COMMA }
Token { input: "}", line: 12, column: 190, rule: CLOSE_BRACES }
Token { input: "default", line: 13, column: 196, rule: DEFAULT }
Token { input: ":", line: 13, column: 203, rule: COLON }
Token { input: "{", line: 13, column: 205, rule: OPEN_BRACES }
Token { input: "char", line: 13, column: 207, rule: TYPE }
Token { input: "a", line: 13, column: 212, rule: IDENTIFIER }
Token { input: "=", line: 13, column: 214, rule: ATTRIBUTION }
Token { input: "\"a\"", line: 13, column: 216, rule: STRING }
Token { input: ";", line: 13, column: 219, rule: COMMA }
Token { input: "}", line: 13, column: 221, rule: CLOSE_BRACES }
Token { input: "}", line: 14, column: 225, rule: CLOSE_BRACES }
Token { input: "$end$", line: 15, column: 227, rule: END }

ERRORS------------------------
